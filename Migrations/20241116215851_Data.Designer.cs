// <auto-generated />
using System;
using EvidenciaStudentov.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ASP_NET_Bakalarka.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241116215851_Data")]
    partial class Data
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ASP_NET_Bakalarka.Models.Rola", b =>
                {
                    b.Property<int>("RolaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("RolaId"));

                    b.Property<string>("Nazov")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("RolaId");

                    b.ToTable("Rola");

                    b.HasData(
                        new
                        {
                            RolaId = 1,
                            Nazov = "Admin"
                        },
                        new
                        {
                            RolaId = 2,
                            Nazov = "Učiteľ"
                        },
                        new
                        {
                            RolaId = 3,
                            Nazov = "Žiak"
                        });
                });

            modelBuilder.Entity("EvidenciaStudentov.Models.PriradeniePredmetovUcitelom", b =>
                {
                    b.Property<int>("PriradenieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PriradenieId"));

                    b.Property<int>("PredmetId")
                        .HasColumnType("int");

                    b.Property<int>("UcitelId")
                        .HasColumnType("int");

                    b.HasKey("PriradenieId");

                    b.HasIndex("PredmetId");

                    b.HasIndex("UcitelId");

                    b.ToTable("PriradeniaPredmetovUcitelom");
                });

            modelBuilder.Entity("EvidenciaStudentov.Models.PriradeniePredmetovZiakom", b =>
                {
                    b.Property<int>("PriradenieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PriradenieId"));

                    b.Property<int>("PredmetId")
                        .HasColumnType("int");

                    b.Property<int>("ZiakId")
                        .HasColumnType("int");

                    b.HasKey("PriradenieId");

                    b.HasIndex("PredmetId");

                    b.HasIndex("ZiakId");

                    b.ToTable("PriradeniaPredmetovZiakom");
                });

            modelBuilder.Entity("Pouzivatel", b =>
                {
                    b.Property<int>("PouzivatelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PouzivatelId"));

                    b.Property<DateTime>("DatumNarodenia")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("HesloHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Meno")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Priezvisko")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("RolaId")
                        .HasColumnType("int");

                    b.HasKey("PouzivatelId");

                    b.HasIndex("RolaId");

                    b.ToTable("Pouzivatelia");
                });

            modelBuilder.Entity("Predmet", b =>
                {
                    b.Property<int>("PredmetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PredmetId"));

                    b.Property<string>("Nazov")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Popis")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.HasKey("PredmetId");

                    b.ToTable("Predmety");
                });

            modelBuilder.Entity("EvidenciaStudentov.Models.PriradeniePredmetovUcitelom", b =>
                {
                    b.HasOne("Predmet", "Predmet")
                        .WithMany("PriradeneUcitelom")
                        .HasForeignKey("PredmetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pouzivatel", "Ucitel")
                        .WithMany("PriradenePredmetyUcitelom")
                        .HasForeignKey("UcitelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Predmet");

                    b.Navigation("Ucitel");
                });

            modelBuilder.Entity("EvidenciaStudentov.Models.PriradeniePredmetovZiakom", b =>
                {
                    b.HasOne("Predmet", "Predmet")
                        .WithMany("PriradeneZiakom")
                        .HasForeignKey("PredmetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pouzivatel", "Ziak")
                        .WithMany("PriradenePredmetyZiakom")
                        .HasForeignKey("ZiakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Predmet");

                    b.Navigation("Ziak");
                });

            modelBuilder.Entity("Pouzivatel", b =>
                {
                    b.HasOne("ASP_NET_Bakalarka.Models.Rola", "Rola")
                        .WithMany("Pouzivatelia")
                        .HasForeignKey("RolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rola");
                });

            modelBuilder.Entity("ASP_NET_Bakalarka.Models.Rola", b =>
                {
                    b.Navigation("Pouzivatelia");
                });

            modelBuilder.Entity("Pouzivatel", b =>
                {
                    b.Navigation("PriradenePredmetyUcitelom");

                    b.Navigation("PriradenePredmetyZiakom");
                });

            modelBuilder.Entity("Predmet", b =>
                {
                    b.Navigation("PriradeneUcitelom");

                    b.Navigation("PriradeneZiakom");
                });
#pragma warning restore 612, 618
        }
    }
}
